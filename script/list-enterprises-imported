#!/usr/bin/env ruby

require 'rubygems'
require File.dirname(__FILE__) + '/../config/environment'
require 'logger'
require 'iconv' unless RUBY_VERSION >= "1.9"

def load_file(file_path, state)
  require 'csv'
  adm_users = []
  enterprises = []
  csv_line_reader = CSV.open(file_path, 'r')
  csv_line_reader.shift  
  csv_line_reader.each do |array|
    user = {:name => array[3], :mail => array[4], :fone => array[5], :city => array[2], :state => state }
    user2 = {:name => array[6], :mail => array[7], :fone => array[8], :city => array[2], :state => state }   
    adm_users << user
    adm_users << user2
    enterprises << {:name => array[0], :identifier=> array[1], :adm_users => adm_users, :city => array[2], :state => state }
    adm_users = []
  end
  enterprises
end

def find_enterprise( name, identifier )
  name = name.gsub("\302\240", ' ').strip if !name.blank?
  identifier = identifier.gsub("\302\240", ' ').strip if !identifier.blank?
  identifier = name.downcase.to_slug if identifier.blank?
  identifier = ActiveSupport::Inflector.transliterate(identifier.downcase.to_slug)
  profile = Profile[ identifier ] 
  identifier = "ees-" + identifier if !profile.blank? and !profile.enterprise?
  profile = Profile[ identifier ]
  identifier = name if !profile.blank? and !profile.enterprise? 
  enterprise = Enterprise[ identifier ]
  return enterprise
end

start_time = Time.now
puts start_time

file = nil
if ARGV.blank?
  exit
else
  file = ARGV[0]
  state = ARGV[1]
end

log_path = File.dirname(__FILE__) + "/../log/"
log_date = start_time.strftime "%Y-%m-%d_%H:%M:%S"
log_name = '%s-script-import-%s.txt' % [ log_date, state ]
$log = Logger.new( log_path + log_name )
$log.debug "Arquivo de log Criado!"

$log.debug "Carregando empreendimento enviados pelo '%s' do arquivo '%s' para a memoria..." % [ state, file ]
enterprises = load_file( file, state )
enterprises_imported = []
$log.debug "Carregado!"

$log.debug "Iniciando listagem. Esta operação pode demorar algum tempo..."
error_enterprises = 0
enterprises.each do |e|    
  enterprise = find_enterprise( e[:name], e[:identifier] )
  if enterprise.blank?
    error_enterprises = error_enterprises + 1
  else
    enterprises_imported << enterprise
  end
  $log.debug "."
  print "."
end
puts ""
$log.debug "Listagem finalizada!"

list_path = File.dirname(__FILE__) + "/../tmp/"
list_date = start_time.strftime "%Y-%m-%d_%H:%M:%S"
list_name = "empreendimentos_importados_%s_%s.csv" % [ state, list_date ]

CSV.open( list_path + list_name, 'w') do |csv|
  csv << ['Nome', 'Endereço da Internet', 'E-mail de Contato']
  enterprises_imported.each do |e|
    csv << [ e.name, "cirandas.net/"+e.identifier, e.contact_email ]
  end
end

puts "Verifique o arquivo '%s' para detalhes sobre a listagem" % list_name
