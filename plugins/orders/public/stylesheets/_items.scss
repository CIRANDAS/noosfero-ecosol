@import 'base';
@import 'orders-variables';

.order-items-container {
  @import 'field';

  &.empty {
    border-top: $border dotted black;
    text-align: center;
  }

  .order-total {
    padding: $half-padding $padding;
    @extend .container-clean;

    .title,
    .value {
      margin-left: $module04; //the size of the previous colums
      padding: 0 $padding;
      width: $module01;
      text-transform: uppercase;
    }

    .value {
      clear: both;
    }
  }

  .order-items {

    .table-header {
      @extend .container-clean;
    }
    //.item do overflow, so no overflow:hidden for its parents (.table-content)

    &.self-actor-name {
      .box-field {
        &.product {
          width: $module03 - $intercolumn;
        }

        &.quantity {
          &, input {
            width: $module02;
          }
        }
        &.price-total {
          width: $module01;
        }

      }
    }

    .box-field {
      float: left;
      padding: $half-padding $padding;
      padding-right: $padding - $border;
      border-right: $border solid white;

      &:last-child {
        border-right: none;
      }

      &.actor-name {
        width: $module02 - $intercolumn/2;
      }
      &.product {
        width: $module02 - $intercolumn/2
      }

      &.quantity {
        &, input {
          width: $module01;
        }
      }
      &.price-total {
        width: $module01;
      }
      &.status {
        width: $module01;
      }
    }
  }

  .table-header, .table-content {
    border-bottom: $border solid black;
  }

  .table-header {
    font-weight: bold;
    font-size: 8px;
    text-transform: uppercase;
  }

  .table-content {

    .order-items-scroll {
      max-height: 350px;
    }
    .item {

      .fields {
        display: table;
        @extend .container-clean;

        .box-field {
          float: none;
          display: table-cell;
        }

        .quantity-price-table {
          padding: 0;

          .quantity-price-row {
            display: table-row;

            .quantity {
              input {
                display: none;
              }

              .unit {
                text-transform: lowercase;
              }
            }
          }
        }

      }

      &.hover,
      &.edit {
        background-color: $order-items-color;
      }

      &.edit {
        // not working with scrollbars' overflow
        //margin-left: -($half-padding + $border);
        //padding: $half-padding;
        //border: $border solid black;

        //border-radius: $border-radius;
        //-moz-border-radius: $border-radius;
        //-o-border-radius: $border-radius;
        //-webkit-border-radius: $border-radius;

        //box-shadow: 0 0 3px rgba(0,0,0,.5);
        //-moz-box-shadow: 0 0 3px rgba(0,0,0,.5);
        //-webkit-box-shadow: 0 0 3px rgba(0,0,0,.5);

        .fields {
          .box-field {
            border-right: none;
            padding-right: $padding;
          }

          .quantity-price-table {
            .quantity-price-row {
              .quantity {

                input {
                  display: block;
                }
              }
            }
          }
        }
        .more {
          display: block;
        }
      }

      .more {
        display: none;
        overflow: hidden;
        width: $order-items-width;

        .actions {
          float: left;

          a {
            color: black;
          }
        }
        .price-with-unit {
          float: right;
          width: $module01;
        }
      }
    }
  }
}
