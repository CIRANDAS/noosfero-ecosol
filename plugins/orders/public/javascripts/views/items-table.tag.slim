order-items-table

  div if='{order.items.length > 0}'
    .order-items class="{'self-supplier': order.self_supplier}"
      .table-header
        .box-field.supplier if='{!order.self_supplier}'
          '{t('views.item._index.supplier')}
        .box-field.product
          '{t('views.item._index.product')}
        .box-field.quantity
          '{t('views.item._index.quantity')}
        .box-field.price-total
          '{t('views.item._index.price_total', {currency: this.order.currency_unit})}
        .box-field.status if='{order.admin}'
          '{t('views.item._index.status')}

      .table-content toggle-ignore='ignore'
        order-item each='{item in order.items}' item='{item}'

    .order-total
      .title
        '{t('views.consumer._total.order_total')}
      .value
        span
          '{I18n.toCurrency(order.total_price)}

      payment each="{payment,index in order.payments}" payment='{payment}' if='{order.admin}'

      .total_yet_to_pay if='{order.admin}'
        .title
          '{t('views.consumer._total.total_yet_to_pay')}
        .value
          span
            '{I18n.toCurrency(order.remaining_total)}
        .payed show='{order.remaining_total == 0}'
          span
            |	âœ“

  div if='{order.items.length == 0}'
    '{t('views.item._index.empty_order')}

  javascript:
    this.order = opts.order

    this.t = window.orders.t

    updateOrder(order) {
      var newL = order.items.length
      var oldL = this.order.items.length
      if (newL < oldL) {
        this.order.items.splice(newL - 1, oldL - newL)
      }

      _.merge(this.order, order)
      _.merge(this.order.payments, order.payments)
      this.update()
    }

    closeAll() {
      _.each(this.tags['order-item'], function (i) { i.isOpen = false })
    }

    adminAdd(product_id) {
      $.post(this.order.add_url, {product_id: product_id}, function(data) {
        this.add(data.item_id, data.order)
      }.bind(this))
    }

    add(item_id, order) {
      this.updateOrder(order)

      this.closeAll()
      _.each(this.tags['order-item'], function (i) {
        if (i.item.id == item_id)
          i.isOpen = true
      })
      this.update()
    }

    remove(item_id) {
      var index = _.remove(this.parent.order.items, function (i) {
        return i.id == item_id
      })
      this.parent.update()
    }

