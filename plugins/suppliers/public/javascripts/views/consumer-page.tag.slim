consumer-page
  .row
    .col-xs-12
      h1.title
        |{cs.t("views.consumer.index.consumer")}

    .col-xs-9
      p.page-description
        |{cs.t("views.consumer.index.description")}

    .col-xs-3
      a.add_consumer.right href="" data-toggle="modal" data-target="consumer-add"
        |{cs.t("views.consumer.index.add_consumer")}

    .col-xs-12 if="{tasks_count > 0}"
      .tasks
        .row
          .col-xs-12.col-md-10
            raw html='{cs.t("views.consumer.index.tasks", {people: this.tasks_count})}' if="{this.tasks_count}"
          .col-xs-12.col-md-2
            a.cs-button href="" onclick="{approval}"
              |{cs.t("views.consumer.index.manage")}
            a.cs-button href="" onclick="{closeApproval}" style="display: none"
              |{cs.t("views.consumer.index.close")}
          .col-xs-12
            .pending-consumers.consumers-listing.row
              pending-consumer-box each='{consumer in pendingConsumers}' consumer='{consumer}'

  .filter
    input type='hidden' value="{page}"

    h4
      |{cs.t("views.consumer.index.filter")}
    form.form-inline onsubmit="return false"
      .form-group
        .name
          input name='search' placeholder="{cs.t('views.consumer.index.search')}" onkeyup='{search}'

      .form-group.hub_id
        select name="hub_id" onchange="{search}"
          option value=""
            |{cs.t("views.consumer.index.select_hub")}
          option each="{hub in hubs}" value="{hub.id}" selected="{hub.id == filter_hub_id}"
            |{hub.name}


  .consumers-listing.row
    consumer-box each='{consumer in consumers}' consumer='{consumer}'

  consumer-view
  pending-consumer-view
  consumer-add

  javascript:
    this.cs = window.consumers;
    this.consumers = opts.consumers;
    this.hubs = opts.hubs;
    this.tasks = opts.tasks;
    this.editView = this.tags['consumer-view']
    this.tasks_count = opts.tasks_count
    this.filter_hub_id = opts.filter_hub_id

    var self = this;

    search(e) {
      var needle = removeDiacritics($('input[name="search"]').val().toLowerCase())
      for (var i in this.consumers) {
        if (needle) {
          var field1 = removeDiacritics(this.consumers[i].name.toLowerCase())
          var field2 = this.consumers[i].email || ''
          this.consumers[i].selected = field1.indexOf(needle) > -1 || field2.indexOf(needle) > -1
        } else this.consumers[i].selected = true;
        // filter hub
        hub_id = $(".filter select[name=hub_id").val()
        if (hub_id && this.consumers[i].selected && this.consumers[i].hub_id != hub_id) {
          this.consumers[i].selected = false
        }
      }
    }

    approval() {
      if (this.pendingConsumers == undefined) {
        pendingConsumersUrl = Routes.suppliers_plugin_consumer_path({profile: noosfero.profile, action: 'pending_consumers'});
        self = this
        $.get(pendingConsumersUrl, {}, function(data) {
          self.pendingConsumers = data
          self.openApproval()
          self.update()
        })
      }
      else
        this.openApproval()
    }
    openApproval() {
      $('.pending-consumers').slideDown()
      $('.tasks a.cs-button').toggle();
    }
    closeApproval() {
      $('.pending-consumers').slideUp()
      $('.tasks a.cs-button').toggle();
    }

    edit(consumer) {
      this.editView.setConsumer(consumer)
      this.editView.loadPurchases();
    }

    reset() {
      $('consumer-view').modal('hide');
      this.update();
    }

    add_consumers(consumers) {
      var self = this
      consumers.forEach(function(consumer) {
        self.consumers.push(consumer)
      })
      this.update();
    }

    showConsumer(id) {
      var index = self.consumers.length - 1
      this.edit(self.consumers[index])
      $('consumer-view').modal('show');
    }
