
<div class="fields">
  <% unless order.self_supplier? %>
    <% supplier = item.product.supplier.abbreviation_or_name rescue self.profile.short_name %>
    <div class="box-field supplier" title="<%= supplier %>"> <%= supplier %> </div>
  <% end %>

  <% product = item.name %>
  <div class="box-field product" title="<%= product %>"> <%= product %> </div>

  <div class="box-field quantity-price-table">
    <% item.quantity_price_data(actor_name, @admin).each do |status, data| %>
      <% next if data[:flags][:not_modified] %>
      <%= render 'orders_plugin_item/quantity_price', :item => item, :order => order, :status => status, :data => data, :actor_name => actor_name %>
    <% end %>
  </div>

</div>

<div class="more">

  <div class="actions">

    <% if (order.may_edit? user, @admin rescue false) %>
      <% if @admin %>
        <%# FIXME: add remove button that do not destroy, but put zero %>

        <%= link_to_function t('orders_plugin.views.item._edit.submit'), "orders.item.submit(this, '#{url_for(:controller => :orders_plugin_admin_item, :action => :edit, :id => item.id, :actor_name => actor_name)}')", :class => 'action-button' %>

      <% else %>
        <%= link_to_remote t('orders_plugin.views.item._edit.remove_from_order'), :update => "item-#{item.id}",
          :loading => "loading_overlay.show('#item-#{item.id}')", :loaded => "loading_overlay.hide('#item-#{item.id}')",
          :url => {:controller => :orders_plugin_item, :action => :destroy, :id => item.id} if order.may_edit? user, @admin rescue false %>

        <%= link_to_function t('orders_plugin.views.item._edit.submit'), "orders.item.submit(this, '#{url_for(:controller => :orders_plugin_item, :action => :edit, :id => item.id)}')", :class => 'action-button' %>

      <% end %>

    <% end %>
  </div>

  <%= price_with_unit_span item.price_as_currency_number, (item.product.unit rescue item.price_as_currency_number), nil, :class => 'box-field' %>

</div>

<div class="clean"></div>

