
<%= f.hidden_field :id if f %>

<div class="fields">
  <% unless order.self_supplier? %>
    <div class="box-field actor-name">
      <%= item.product.supplier.abbreviation_or_name %>
    </div>
  <% end %>

  <div class="box-field product">
    <%= item.name %>
  </div>

  <div class="box-field quantity-price-table">
    <%# render 'orders_plugin_item/quantity_price', :item => item, :status => 'ordered', :edit_only => false, :f => f, :actor_name => actor_name %>
    <% OrdersPlugin::Order::Statuses.each_with_index do |status, i| %>
      <%= render 'orders_plugin_item/quantity_price', :item => item, :status => status, :edit_only => false, :f => f, :actor_name => actor_name %>
      <% break unless item.order.status_on? status %>
    <% end %>
  </div>

</div>

<div class="more">

  <div class="actions">

    <% if @admin %>
      <%= link_to_function t('orders_plugin.views.item._edit.remove_from_order'), "jQuery(this).parents('.value-row').remove();"  %>

    <% elsif f %>

      <%= link_to_function t('orders_plugin.views.item._edit.submit'), "orders.item.submit(this, '#{url_for(:controller => :orders_plugin_item, :action => :edit, :id => item.id)}')", :class => 'action-button' %>

      <%= link_to_remote t('orders_plugin.views.item._edit.remove_from_order'), :update => "item-#{item.id}",
        :loading => "loading_overlay.show('#item-#{item.id}')", :loaded => "loading_overlay.hide('#item-#{item.id}')",
        :url => {:controller => :orders_plugin_item, :action => :destroy, :id => item.id} if order.may_edit? user, @admin %>

    <% end %>
  </div>

  <div class="box-field price-with-unit">
    <%= price_with_unit_span item.price_consumer_ordered_as_currency_number, item.product.unit rescue item.price_consumer_ordered_as_currency_number %>
  </div>

</div>

<div class="clean"></div>

